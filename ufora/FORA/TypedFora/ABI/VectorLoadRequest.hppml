/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "VectorRecord.hpp"

namespace TypedFora {
namespace Abi {

class VectorRecord;
class VectorHandle;

class VectorLoadRequest {
public:
	VectorLoadRequest();

	~VectorLoadRequest();

	VectorLoadRequest(const VectorLoadRequest& inVLR);

	//the entire paged portion of the vector
	VectorLoadRequest(const VectorRecord& vec);

	VectorLoadRequest(const VectorRecord& vec, int64_t index);

	VectorLoadRequest(const VectorRecord& vec, int64_t lowIndex, int64_t highIndex);

	VectorHandle* getHandle() const;

	void setHandle(VectorHandle* inHandle);

	int64_t getIndexLow() const;

	int64_t getIndexHigh() const;

	bool isPopulated() const
		{
		return mVectorHandlePtr != 0;
		}

private:
	VectorHandle* mVectorHandlePtr;

	int64_t mIndexLow;

	int64_t mIndexHigh;
};

}
}

